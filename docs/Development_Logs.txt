DDAECOLL_V1: PLANNING TO FORMULATE PROBLEM dot{x}=f(t,y1,y2,...,yn,p). LATER REALIZED THIS FORMULATION IS NOT NECESSARY (WE CAN ASSEMBLE y1,
y2,...,yn to be y=(y1;y2;...,yn) AND CONVINENT (WHEN IT COMES TO THE CALCULATION OF JACOBIAN BY NUMERICAL DIFFERENITION). THIS VERSION IS
NOT COMPLETED.

DDAECOLL_V2: FORMULATION BASED ON SATGED_CONST_V3. HERE WE INTERPOLATE t_{bp} to get t_{cn}, JUST LIKE INTERPOLATION OF x. HOWEVER, THIS IS
NOT NECESSARY BECAUSE WE CAN OBTAIN t_{cn} DIRECTLY BY PLUGINING z^d or z^a. BASED ON THIS OBSERVATION, WE HAVE DDAECOLL_V3.

DDAECOLL_V3: WE CALCULATE t_{cn} DIRECTLY, AND FORMULATION CAN BE FOUND IN SATEGD_CONST_V4. DDAECOLL_V2 AND V_3 ARE NUMERICAL EQUIVLENT AS
LONG AS NCOL>0 BECAUSE THE t_{bp} IS A LINEAR FUNCTION AND THE JACOBIAN IS THE SAME AS WELL IF NCOL>0. THE JACOBIAN W.R.T. T0 ARE EQUIVALENT
BECAUSE THE SUM OF EACH ROW IN INTERPOLATION MATRIX IS EQUAL TO ONE.

OTHER TOOLBOXES NAMED WITH V2, INCLUDING ADJT_DDAECOLL_V2, ALG_DAE_V2, ADJT_ALG_DAE_V2, ALG_DDE_V2, ARE BASED ON DDAECOLL_V2.

ALG_DDE_V1: THIS ONE WE USE COCO_ADD_FUNC TO IMPLEMENT EACH G_I^(J), WHICH IS NOT CORRECT BECAUSE THE NUMBER OF EQUATIONS ARE DYNAMIC SINCE
THE COLLOCATION INTERVAL ARE CHANGEING IN CONTINUATION, WHICH LEAD TO ERROR IN COCO. THIS ONE IS BASED ON DDAECOLL_V2.

ALG_DDE_V2: THIS ONE IS BASED ON DDAECOLL_V2 AS WELL. IT BASED ON FOR-LOOP IMPLEMENTATION FOR EACH G_I. IN OTHER WORDS, WE COMBINE ALL J FOR
EACH CONSTRAINTS SUCH THAT THE ADDED ZERO FUNCTION HAS FIXED DIMENSION: NTST*NCOL*YDIM.

ALG_DDE_V3: THIS ONE IS VECTORIZATION OF THE PREVIOUS VERSION. COMPUTAIONAL EFFICIENTY IS IMPROVED BY 4 TIMES. NO JACOBIAN IS PROVIDED. IT
IS BASED ON DDAECOLL_V3

ALG_DDE_V4: THIS ONE IS SIMILAR TO THE ABOVE ONE AND USE DDAECOLL_V3 AS WELL. HOWEVER, ANALYTICAL JACOBIAN IS ALLOWED IN THIS VERSION.

ADJT_ALG_DDE_V1: THIS ONE IS BASED ON staged_const_v4. THE IMPLEMENTATION OF VARIATION OF X IS INCORRECT. IT IS BASED ON DDAE_COLL_V3 AS
WELL. WE CORRECT THE MISTAKES AND THEN DEVELOP ADJG_ALG_DDE_V2

ADJT_ALG_DDE_V2: THIS ONE IS BASED ON staged_const_v5, WHICH CORRECTS MISTAKES IN staged_const_v4. IT IS BASED ON DDAE_COLL_V3 AS WELL.

ALG_DDAE_V1: THIS ONE IS BASED ON FOR-LOOP IMPLEMENTATION FOR EACH G_I. IN ADDITION, IT IS BASED ON DDAECOLL_V3. IN LATER VERSIONS, WE WILL
CONSIDER ITS VECTORIZATION

ALG_DDAE_V2: THIS ONE IS THE VECTORIZATION OF THE PREVIOUS VERSION. IT IS BASED ON staged_const_v5 AND DDAECOLL_V3 AS WELL. HOWEVER, NO
JACOBIAN IS PROVIDED IN THIS VERSION.

ALG_DDAE_V3: THIS ONE IS SIMILAR TO THE ABOVE ONE. HOWEVER, ANALYTICAL JACOBIAN IS ALLOWED IN THIS VERSION.

